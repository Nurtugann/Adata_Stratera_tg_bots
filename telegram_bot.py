# -*- coding: utf-8 -*-
import telebot
import threading
import time
import requests
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

import os

API_KEY = os.getenv("telgram_real_bot_api")
token_url = os.getenv("token_url")
bin_url_2 = os.getenv("bin_url_2")


bot = telebot.TeleBot(API_KEY)

allowed_users = {
    7932774397: "–ê—Ä—É–Ω–∞",
    528517673: "–ï—Å–∫–∞—Ç–æ–≤ –ê–ª–∏—à–µ—Ä –ú–∞—Ä–∞—Ç–æ–≤–∏—á",
    1115327907: "–°–∞—Ñ–æ–Ω–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä",
    1090349915: "–ë–∞–π–º—É—Ä–∑–∏–Ω–æ–≤ –†—É—Å—Ç–µ–º –ú—É—Ä–∞—Ç–æ–≤–∏—á",
    1106476172: "–ê–±–¥–∏—Ä–æ–≤ –ë–µ–∫–±—É–ª–∞—Ç –ö–∞–π—Ä–∞—Ç–æ–≤–∏—á",
    435397805: "–ì–ª–∞–∑—ã—Ä–∏–Ω –í—è—á–µ—Å–ª–∞–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á",
    7852053436: "–ö–æ—Ä–∂–æ–≤ –î–º–∏—Ç—Ä–∏–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á",
    752841282: "–®–∞–¥—Ä–∏–Ω –í–∏—Ç–∞–ª–∏–π –í—è—á–µ—Å–ª–∞–≤–æ–≤–∏—á",
    549557630: "–ï—Å–µ–Ω—Ç–∞–µ–≤ –î–∞–º–∏—Ä ",
    992265183: "–ë–∞–ª–≥–æ–∂–∞ –†–∞—É–∞–Ω –ï—Ä–∫–µ–±—É–ª–∞–Ω—É–ª—ã",
    1070083923: "–®—É–±–∏–Ω –ì–ª–µ–± –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á",
    1236379606: "–ì—É–≥–Ω–µ–≤–∏—á –ï–≤–≥–µ–Ω–∏–π –ü–∞–≤–ª–æ–≤–∏—á",
    1601907399: "–ù—É—Ä–≥–∞–ª–∏–µ–≤ –ï–ª–∞–º–∞–Ω",
    527670595: "–°–∞–¥–æ–≤—Å–∫–∏–π –ò–≥–æ—Ä—å –í–∞–ª—å—Ä–µ–≤–∏—á",
    7507209038: "–ü–∞—Ä—à—É—Ç–∏–Ω –ï–≤–≥–µ–Ω–∏–π –ò–≥–æ—Ä–µ–≤–∏—á",
    1787060581: "–í–∞—Ö–Ω–∏–Ω–∞ –í–∏–∫—Ç–æ—Ä–∏—è –ê–Ω–∞—Ç–æ–ª—å–µ–≤–Ω–∞",
    5087650386: "–ö—É–ª–±—É–ª–¥–∏–Ω –ë–∞—É—ã—Ä–∂–∞–Ω",
    368200758: "–ñ—É–Ω—É—Å–æ–≤ –ê–π–¥—ã–Ω –ë–µ–∫–æ–≤–∏—á",
    6568553601: "–£—Å–µ–Ω–æ–≤ –ê—Å–∞–Ω–∞–ª–∏ –ê—Å—Ö–∞—Ç–æ–≤–∏—á",
    7306728048: "–ü–µ—Ä–µ—à–∏–≤–∫–∏–Ω –ò–≥–æ—Ä—å",
    5970079059: "–®–ø–∞–∫–æ–≤—Å–∫–∏–π –°–µ—Ä–≥–µ–π",
    717489456: "–®–∞—Ç–∫–µ–Ω–æ–≤ –ê—Ä–ª–∞–Ω –ù—É—Ä–¥–∞—É–ª–µ—Ç–æ–≤–∏—á",
    5442237913: "–°–æ–ª–¥–∞—Ç–µ–Ω–∫–æ–≤ –ê—Ä—Ç–µ–º –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á",
    543024941: "–ñ–∞–∫–∏–µ–Ω–æ–≤ –î–∞–Ω–∏—è—Ä –ë–µ—Ä–∏–∫–æ–≤–∏—á",
    477248141: "–ê–Ω–∏—à–∫–µ–≤–∏—á –í–ª–∞–¥–∏—Å–ª–∞–≤ –°–µ—Ä–≥–µ–µ–≤–∏—á",
    780568746: "–¢–µ—Ä–µ—â–µ–Ω–∫–æ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ì—Ä–∏–≥–æ—Ä—å–µ–≤–∏—á",
    2020413343: "–ù—É—Ä–≥–∞–ª–∏–µ–≤ –î–∞–Ω–∏—è—Ä –†–∞–º–∞–∑–∞–Ω–æ–≤–∏—á",
    5303738892: "–ö–æ–π–≥–µ–ª–¥—ã –ñ–µ–Ω–∏—Å –î–∞—É–ª–µ—Ç—É–ª—ã",
    508256083: "–Ø–∫–æ–≤–ª–µ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á",
    8107067331: "–ë–∞–π–≥–∞–∑–∏–µ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä",
    1016809072: "–ê–¥–æ–º–∞–π—Ç–∏—Å –ï–≤–≥–µ–Ω–∏–π",
    1897623417: "–õ—É–±—è–Ω–µ—Ü–∫–∏–π –ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤–∏—á",
    875411607: "–ö–∞—Ä—Ç–∞—à–æ–≤ –û–ª–µ–≥ –í–∞–ª–µ—Ä—å–µ–≤–∏—á",
    1981124911: "–®—É–ª—å—Ü –ù–∏–∫–æ–ª–∞–π –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á",
    6231136971: "–ê–º–∏—Ä–±–µ–∫ –ñ–∞–Ω–∏–±–µ–∫ –ê–¥–∏–ª—å–±–µ–∫–æ–≤–∏—á",
    5176965194: "–ö–∞–ª–∏–∑–∞—Ç–æ–≤ –ë–∞—É—ã—Ä–∂–∞–Ω –ö–∞–Ω–∞—Ç–æ–≤–∏—á",
    828188265: "–ö–∞–ª–∏–µ–≤ –ñ–∞–Ω–∏–±–µ–∫",
    782238817: "–°–∏–¥–æ—Ä–µ–Ω–∫–æ –ê–ª–µ–∫—Å–µ–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á",
    7248286025: "–ë–æ—Ä–æ–¥–∏—á –ù–∏–∫–æ–ª–∞–π –ú–∏—Ö–∞–π–ª–æ–≤–∏—á",
    8088143874: "–ê–≤–∏–∂–∏—á –í–∏–∫—Ç–æ—Ä –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á",
    436769994: "–ú–∞–∫—Å–∏–º–æ–≤ –°—Ç–∞–Ω–∏—Å–ª–∞–≤ –í–∞–ª–µ—Ä—å–µ–≤–∏—á",
    230004989: "–ö–∞–¥—ã—Ä–±–µ–∫ –ö—É–∞—Ç",
    473547152: "–¢–∞—É–∫–∏–Ω –ö–∞–Ω–∞—Ç –ê–±–ª–∞–µ–≤–∏—á",
    516180924: "–ò–±—Ä–∞–µ–≤ –ê–∫–µ–∂–∞–Ω –ê—É–ª–∏—Ö–∞–Ω–æ–≤–∏—á",
    5679662661: "–°–æ–ª–æ–≤—å–µ–≤ –ï–≤–≥–µ–Ω–∏–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á",
    353184443: "–ö—É—Ç–∞—à–æ–≤ –í–∏—Ç–∞–ª–∏–π",
    6110113341: "–¢—É—Ä–≥—É–º–±–∞–µ–≤ –ò–ª—å—è—Å",
    715691300: "–¢—É—Ä–µ–∂–∞–Ω–æ–≤ –ë—É–ª–∞—Ç –ê–≥–∏–±–∞–µ–≤–∏—á",
    1633629108: "–ú–∞–¥–∏ –ù–∞–∑–∞—Ä–±–µ–∫",
    1372719987: "–î–∂–∏–æ–µ–≤ –ì–µ–æ—Ä–≥–∏–π",
    7022099012: "–°–µ–π–¥—ã–∫–æ–≤ –ú–∞–∫—Å–∏–º –ï–≤–≥–µ–Ω—å–µ–≤–∏—á",
    7731034003: "–ö—É–∞–Ω—ã—à –ú–∞–º–±–µ—Ç–æ–≤",
    592052143: "–ì–µ—Ä–∞—Å–∏–º–æ–≤ –í–∏—Ç–∞–ª–∏–π –í–∞–ª–µ—Ä—å–µ–≤–∏—á",
    5672873644: "–ñ–∞–Ω–∞—Ç –û—Ö–∞—Ç–æ–≤",
    170233096: "–ù–∞—Ç–∞–ª—å—è",
    7260153078: "–ù—É—Ä—Å—É–ª—Ç–∞–Ω",
    712766177: "–ú—É—Ä–∞—Ç",
    6263090827: "–ö–∞–±–∏–º—É–ª–¥–∏–Ω –†—É—Ñ–∞—Ç –ê—Å–µ—Ç–æ–≤–∏—á",
    2096887718: "–ö–ª—é—á–∫–∞ –°–µ—Ä–≥–µ–π –°–µ—Ä–≥–µ–µ–≤–∏—á",
    6425627696: "–î–∂–µ–∫—Å–µ–Ω–±–∞–µ–≤ –†–∏–Ω–∞—Ç –ö–∞–¥–µ–Ω–æ–≤–∏—á",
    5536766070: "–ö–ª–∏–Ω–æ–≤–∏—Ü–∫–∏–π –ê–Ω–¥—Ä–µ–π –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á ",
    803315196: "–†–∞–∫ –ï–≥–æ—Ä –í–∞–ª–µ—Ä—å–µ–≤–∏—á",
    357140691: "–°–µ—Ä–∏–∫–æ–≤ –ë–∞—Ö—Ç–∏—è—Ä",
    591725711: "–î–∞—É–ª–µ–Ω–æ–≤ –ê–∑–∞–º–∞—Ç –ê–π—Ç–∂–∞–Ω–æ–≤–∏—á",
    5003150190: "–°–∞–¥–≤–æ–∫–∞—Å–æ–≤ –†—É—Å—Ç–∞–º",
    7687709758: "–ñ–∞–π—ã—Ä–±–∞–µ–≤ –î–∞—É—Ä–µ–Ω –ë–µ–∏–º–±–µ–∫–æ–≤–∏—á",
    1101041371: "–Ø—Ü—ã–Ω–æ–≤–∏—á –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω¬†–Æ—Ä—å–µ–≤–∏—á",
    892390481: "–ë–æ–π–∫–æ –û–ª–µ–≥",
    5086276503: "–ê—Å–µ—Ç –ú—É–∫—É—à–µ–≤",
    7017920749: "–î–∏–Ω–∞—Ä–∞ –ê–π–¥–∞—Ä–æ–≤–∞",
    885253145: "–ù—É—Ä—Ç—É–≥–∞–Ω",
    808225428: "–°—É–Ω–¥–µ—Ç–±–∞–µ–≤ –ë–æ–ª–∞—Ç"
}

user_state = {}
modules = ['basic', 'status', 'riskfactor', 'trustworthy-extended']

bin_url_1 = "https://api.adata.kz/api/company/"

def get_company_info(bin, module):
    try:
        url = f"{bin_url_1}{module}{bin_url_2}{bin}"
        r = requests.get(url)
        if r.status_code != 200:
            return {}

        token_id = r.json()['token']
        url_2 = f"{token_url}{token_id}"
        while True:
            r2 = requests.get(url_2)
            if r2.status_code != 200:
                return {}
            if r2.json()['message'] == 'ready':
                return r2.json()
            elif r2.json()['message'] != 'wait':
                return {}
            time.sleep(1)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –¥–∞–Ω–Ω—ã—Ö:", e)
        return {}

def send_company_info(bot, chat_id, basic):
    bot.send_message(chat_id, '–ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: ' + basic.get('name_ru', '‚Äî'))
    bot.send_message(chat_id, '–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ' + basic.get('date_registration', '‚Äî'))
    bot.send_message(chat_id, f"–û–ö–≠–î ({basic.get('oked_id', '‚Äî')}): {basic.get('oked', '‚Äî')}")
    bot.send_message(chat_id, '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å: ' + basic.get('legal_address', '‚Äî'))
    bot.send_message(chat_id, '–§–ò–û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è: ' + basic.get('fullname_director', '‚Äî'))

@bot.message_handler(commands=['start'])
def start(message):
    if message.chat.id not in allowed_users:
        bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return

    user_name = allowed_users[message.chat.id]
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é"))
    markup.add(KeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å"))

    bot.send_message(message.chat.id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
    user_state[message.chat.id] = "waiting_for_action"

@bot.message_handler(func=lambda message: message.text in ["üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é", "‚ÑπÔ∏è –ü–æ–º–æ—â—å"])
def handle_menu(message):
    if message.chat.id not in allowed_users:
        bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return

    if message.text == "üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏—é":
        bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ –ë–ò–ù –∫–æ–º–ø–∞–Ω–∏–∏.")
        user_state[message.chat.id] = "waiting_for_id"
    else:
        bot.send_message(message.chat.id, "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ –ë–ò–ù. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –ë–ò–ù.")

@bot.message_handler(func=lambda message: user_state.get(message.chat.id) == "waiting_for_id")
def handle_company_id(message):
    if message.chat.id not in allowed_users:
        bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return

    company_id = message.text.strip()
    bot.send_message(message.chat.id, "‚è≥ –ò–¥—ë—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞...")

    try:
        basic_info = get_company_info(company_id, modules[0])
        if not basic_info:
            raise ValueError("–ö–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

        basic = basic_info['data']
        status = get_company_info(company_id, modules[1])['data']
        risk = get_company_info(company_id, modules[2])['data']
        trust = get_company_info(company_id, modules[3])['data']

        info = []

        if not status['company_status']:
            info.append("‚ùó –í —Å–ø–∏—Å–∫–µ ¬´–ë–µ–∑–¥–µ–π—Å—Ç–≤—É—é—â–µ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ¬ª")
        if status['bankcrupt']:
            info.append("‚ùó –í —Å–ø–∏—Å–∫–µ ¬´–ë–∞–Ω–∫—Ä–æ—Ç¬ª")
        if risk['company']['seized_bank_account']:
            info.append("‚ùó –ê—Ä–µ—Å—Ç –Ω–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Å—á–µ—Ç–∞")
        if risk['company']['seized_property']:
            info.append("‚ùó –ê—Ä–µ—Å—Ç –Ω–∞ –∏–º—É—â–µ—Å—Ç–≤–æ")
        if risk['company']['ban_registration_actions_legal_ent']:
            info.append("‚ùó –ó–∞–ø—Ä–µ—Ç –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –Æ–õ")
        if risk['company']['ban_registration_actions_physical_ent']:
            info.append("‚ùó –ó–∞–ø—Ä–µ—Ç –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –§–õ")
        if risk['company']['ban_notarius_actions']:
            info.append("‚ùó –ó–∞–ø—Ä–µ—Ç –Ω–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–∏–µ –Ω–æ—Ç–∞—Ä–∏–∞–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π")
        if risk['head']['enforcement_debt']:
            info.append("‚ùó –î–æ–ª–∂–Ω–∏–∫ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞–º")
        if risk['head']['debtor_for_executive_documents']:
            info.append("‚ùó –í —Å–ø–∏—Å–∫–µ –¥–æ–ª–∂–Ω–∏–∫–æ–≤ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º")
        if trust['tax_arrears_150']:
            info.append("‚ùó –ù–∞–ª–æ–≥–æ–≤–∞—è –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –±–æ–ª–µ–µ 150 –ú–†–ü")
        if trust['restriction_on_leaving']:
            info.append("‚ùó –í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –≤—ã–µ–∑–¥ –∏–∑ –†–ö")
        if trust['transport_arrest']:
            info.append("‚ùó –ê—Ä–µ—Å—Ç –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç")

        send_company_info(bot, message.chat.id, basic)

        if not info:
            bot.send_message(message.chat.id, "–ü—Ä–æ–±–ª–µ–º –Ω–µ—Ç ‚úÖ")
        else:
            for i in info:
                bot.send_message(message.chat.id, i)

        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–æ–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥—Ä—É–≥—É—é –∫–æ–º–ø–∞–Ω–∏—é", callback_data="check_another"))
        bot.send_message(message.chat.id, "–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥—Ä—É–≥—É—é –∫–æ–º–ø–∞–Ω–∏—é?", reply_markup=markup)

        user_state[message.chat.id] = "waiting_for_action"

    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞:", e)
        bot.send_message(message.chat.id, "‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ë–ò–ù –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π.")

@bot.callback_query_handler(func=lambda call: call.data == "check_another")
def check_another(call):
    if call.message.chat.id not in allowed_users:
        bot.send_message(call.message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.")
        return
    bot.send_message(call.message.chat.id, "–ü—Ä–∏—à–ª–∏—Ç–µ –ë–ò–ù –∫–æ–º–ø–∞–Ω–∏–∏.")
    user_state[call.message.chat.id] = "waiting_for_id"

if __name__ == "__main__":
    bot.polling(non_stop=True)